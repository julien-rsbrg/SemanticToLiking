Search.setIndex({"docnames": [".special", "_autosummary/src", "_autosummary/src.featurizer", "_autosummary/src.featurizer.generators", "_autosummary/src.featurizer.generators.AbsFunction", "_autosummary/src.featurizer.generators.DeltaFunction", "_autosummary/src.featurizer.generators.DivideFunction", "_autosummary/src.featurizer.generators.ExponentialFunction", "_autosummary/src.featurizer.generators.MyGeneratorWrapper", "_autosummary/src.featurizer.generators.OppositeFunction", "_autosummary/src.featurizer.generators.PowerFunction", "_autosummary/src.featurizer.generators.ProductFunction", "_autosummary/src.featurizer.generators.SmoothExponentialWeightedFunction", "_autosummary/src.featurizer.generators.SumFunction", "_autosummary/src.featurizer.generators.TransformFunction", "_autosummary/src.featurizer.pipeline", "_autosummary/src.featurizer.pipeline.FeaturizerPipeline", "_autosummary/src.featurizer.selectors", "_autosummary/src.featurizer.selectors.BaseSelector", "_autosummary/src.featurizer.selectors.ClusterFilter", "_autosummary/src.featurizer.selectors.FeedForwardDartsForecastingSelection", "_autosummary/src.featurizer.selectors.LowVarianceThreshold", "_autosummary/src.featurizer.utils", "_autosummary/src.featurizer.utils.dist_absolute_correlation", "_autosummary/src.featurizer.utils.dist_absolute_correlation_on_samples", "_autosummary/src.main", "_autosummary/src.main.ForecastPerformanceTracker", "_autosummary/src.main.ForecastRun", "_autosummary/src.model_instantiator", "_autosummary/src.model_instantiator.instantiate_model", "_autosummary/src.model_instantiator.preprocess_model_params", "_autosummary/src.utils", "_autosummary/src.utils.plot_bar_chart", "api", "index"], "filenames": [".special.rst", "_autosummary/src.rst", "_autosummary/src.featurizer.rst", "_autosummary/src.featurizer.generators.rst", "_autosummary/src.featurizer.generators.AbsFunction.rst", "_autosummary/src.featurizer.generators.DeltaFunction.rst", "_autosummary/src.featurizer.generators.DivideFunction.rst", "_autosummary/src.featurizer.generators.ExponentialFunction.rst", "_autosummary/src.featurizer.generators.MyGeneratorWrapper.rst", "_autosummary/src.featurizer.generators.OppositeFunction.rst", "_autosummary/src.featurizer.generators.PowerFunction.rst", "_autosummary/src.featurizer.generators.ProductFunction.rst", "_autosummary/src.featurizer.generators.SmoothExponentialWeightedFunction.rst", "_autosummary/src.featurizer.generators.SumFunction.rst", "_autosummary/src.featurizer.generators.TransformFunction.rst", "_autosummary/src.featurizer.pipeline.rst", "_autosummary/src.featurizer.pipeline.FeaturizerPipeline.rst", "_autosummary/src.featurizer.selectors.rst", "_autosummary/src.featurizer.selectors.BaseSelector.rst", "_autosummary/src.featurizer.selectors.ClusterFilter.rst", "_autosummary/src.featurizer.selectors.FeedForwardDartsForecastingSelection.rst", "_autosummary/src.featurizer.selectors.LowVarianceThreshold.rst", "_autosummary/src.featurizer.utils.rst", "_autosummary/src.featurizer.utils.dist_absolute_correlation.rst", "_autosummary/src.featurizer.utils.dist_absolute_correlation_on_samples.rst", "_autosummary/src.main.rst", "_autosummary/src.main.ForecastPerformanceTracker.rst", "_autosummary/src.main.ForecastRun.rst", "_autosummary/src.model_instantiator.rst", "_autosummary/src.model_instantiator.instantiate_model.rst", "_autosummary/src.model_instantiator.preprocess_model_params.rst", "_autosummary/src.utils.rst", "_autosummary/src.utils.plot_bar_chart.rst", "api.rst", "index.rst"], "titles": ["&lt;no title&gt;", "src", "src.featurizer", "src.featurizer.generators", "src.featurizer.generators.AbsFunction", "src.featurizer.generators.DeltaFunction", "src.featurizer.generators.DivideFunction", "src.featurizer.generators.ExponentialFunction", "src.featurizer.generators.MyGeneratorWrapper", "src.featurizer.generators.OppositeFunction", "src.featurizer.generators.PowerFunction", "src.featurizer.generators.ProductFunction", "src.featurizer.generators.SmoothExponentialWeightedFunction", "src.featurizer.generators.SumFunction", "src.featurizer.generators.TransformFunction", "src.featurizer.pipeline", "src.featurizer.pipeline.FeaturizerPipeline", "src.featurizer.selectors", "src.featurizer.selectors.BaseSelector", "src.featurizer.selectors.ClusterFilter", "src.featurizer.selectors.FeedForwardDartsForecastingSelection", "src.featurizer.selectors.LowVarianceThreshold", "src.featurizer.utils", "src.featurizer.utils.dist_absolute_correlation", "src.featurizer.utils.dist_absolute_correlation_on_samples", "src.main", "src.main.ForecastPerformanceTracker", "src.main.ForecastRun", "src.model_instantiator", "src.model_instantiator.instantiate_model", "src.model_instantiator.preprocess_model_params", "src.utils", "src.utils.plot_bar_chart", "API", "Welcome to Time Series Forecasting Generic\u2019s documentation!"], "terms": {"modul": [1, 2, 27, 34], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 30], "base": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27], "transformfunct": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 34], "take": [4, 6, 8, 9, 10, 11, 13, 18, 19, 20, 21, 26], "absolut": [4, 23, 24], "valu": [4, 8, 9, 16, 18, 19, 20, 21, 26], "attribut": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21], "input_nam": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 34], "name": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27, 34], "us": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27, 29, 30], "input": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 27, 30], "transform": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 27, 34], "function": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 22, 28, 31], "input_typ": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 34], "type": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20], "allow": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 27], "main_nam": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 34], "main": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 34], "authentif": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "params_repr": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 34], "represent": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 19], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32], "method": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27], "__init__": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27, 34], "arg": [4, 6, 7, 9, 11, 13, 14], "kwarg": [4, 6, 7, 9, 11, 13, 14, 27], "appli": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 34], "x": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 32], "datafram": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27], "correct": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "column": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "properti": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "str": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 26, 27, 29, 30, 32], "period": 5, "int": [5, 10, 16, 19, 20, 21, 26, 27], "perform": [5, 12, 26], "delta": 5, "engin": [5, 26, 27], "give": [5, 26], "an": [5, 8, 16, 18, 19, 20, 21, 29], "estim": [5, 8, 16, 18, 19, 20, 21, 32], "differenti": 5, "over": 5, "time": [5, 20, 26, 27], "initi": [5, 8, 12, 26, 27], "foral": 5, "t": 5, "everi": [6, 11, 13, 26], "combin": [6, 11, 13], "2": [6, 11, 13, 19, 32], "divid": 6, "them": [6, 11, 13, 27], "list": [6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27], "exponenti": [7, 12], "transform_funct": 8, "verbos": [8, 16, 18, 19, 20, 21], "bool": [8, 16, 18, 19, 20, 21, 26, 27], "true": [8, 16, 18, 19, 20, 21, 26], "baseestim": [8, 16, 18], "transformermixin": [8, 16, 18], "instanc": [8, 16, 18, 19, 20, 21, 26, 29], "creat": [8, 16, 26], "new": [8, 16, 18, 19, 20, 21], "option": [8, 16, 20, 26, 27, 32], "default": [8, 16, 18, 19, 20, 21, 26, 27, 32], "fit": [8, 16, 18, 19, 20, 21, 27, 34], "y": [8, 16, 18, 19, 20, 21, 32], "none": [8, 16, 18, 19, 20, 21, 26, 27, 32], "place": 8, "pd": [8, 26, 27], "sourc": 8, "data": [8, 16, 26, 27], "target": [8, 16, 26], "return": [8, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30], "fit_transform": [8, 16, 18, 19, 20, 21, 34], "from": [8, 16, 18, 19, 20, 21, 27, 30], "newli": 8, "get_feature_names_out": [8, 34], "input_featur": 8, "iter": [8, 32], "get": [8, 16, 18, 19, 20, 21], "unus": 8, "get_metadata_rout": [8, 16, 18, 19, 20, 21, 34], "metadata": [8, 16, 18, 19, 20, 21], "rout": [8, 16, 18, 19, 20, 21], "thi": [8, 16, 18, 19, 20, 21, 27], "object": [8, 16, 18, 19, 20, 21, 26, 27], "pleas": [8, 16, 18, 19, 20, 21], "check": [8, 16, 18, 19, 20, 21], "user": [8, 16, 18, 19, 20, 21], "guid": [8, 16, 18, 19, 20, 21], "how": [8, 16, 18, 19, 20, 21, 26, 27], "mechan": [8, 16, 18, 19, 20, 21], "work": [8, 16, 18, 19, 20, 21], "metadatarequest": [8, 16, 18, 19, 20, 21], "A": [8, 16, 18, 19, 20, 21], "encapsul": [8, 16, 18, 19, 20, 21], "inform": [8, 16, 18, 19, 20, 21, 26, 29], "get_param": [8, 16, 18, 19, 20, 21, 34], "deep": [8, 16, 18, 19, 20, 21], "If": [8, 16, 18, 19, 20, 21], "contain": [8, 16, 18, 19, 20, 21], "subobject": [8, 16, 18, 19, 20, 21], "ar": [8, 16, 18, 19, 20, 21, 26, 32], "param": [8, 16, 18, 19, 20, 21, 30], "dict": [8, 16, 18, 19, 20, 21, 26, 29, 30], "map": [8, 16, 18, 19, 20, 21], "set_output": [8, 16, 18, 19, 20, 21, 34], "set": [8, 16, 18, 19, 20, 21, 26], "output": [8, 16, 18, 19, 20, 21], "see": [8, 12, 16, 18, 19, 20, 21], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [8, 16, 18, 19, 20, 21], "py": [8, 16, 18, 19, 20, 21], "exampl": [8, 16, 18, 19, 20, 21], "api": [8, 16, 18, 19, 20, 21, 34], "panda": [8, 12, 16, 18, 19, 20, 21], "configur": [8, 16, 18, 19, 20, 21], "format": [8, 16, 18, 19, 20, 21], "i": [8, 16, 18, 19, 20, 21, 26, 30], "unchang": [8, 16, 18, 19, 20, 21], "self": [8, 10, 16, 18, 19, 20, 21, 27], "set_param": [8, 16, 18, 19, 20, 21, 34], "The": [8, 16, 18, 19, 20, 21, 26, 27, 29, 30], "simpl": [8, 16, 18, 19, 20, 21], "well": [8, 16, 18, 19, 20, 21], "nest": [8, 16, 18, 19, 20, 21], "pipelin": [8, 18, 19, 20, 21, 34], "latter": [8, 16, 18, 19, 20, 21], "have": [8, 16, 18, 19, 20, 21, 26, 27], "form": [8, 16, 18, 19, 20, 21], "compon": [8, 16, 18, 19, 20, 21], "__": [8, 16, 18, 19, 20, 21], "so": [8, 16, 18, 19, 20, 21], "": [8, 16, 18, 19, 20, 21], "possibl": [8, 16, 18, 19, 20, 21], "updat": [8, 16, 18, 19, 20, 21], "each": [8, 16, 18, 19, 20, 21, 26, 32], "opposit": 9, "power": 10, "multipli": 11, "ewm_com": 12, "float": [12, 19, 20, 21, 23, 26, 32], "weight": 12, "smooth": 12, "specifi": [12, 19, 30], "decai": 12, "term": 12, "center": 12, "mass": 12, "document": 12, "more": 12, "detail": 12, "sum": 13, "abc": 14, "abstract": 14, "gener": [16, 27], "feature_selector": 16, "selector_sequential_mask": 16, "max_depth": 16, "1": [16, 20, 23, 24, 26, 32], "full": 16, "todo": [16, 20, 27], "add": 16, "choic": 16, "sequenti": 16, "v": [16, 23, 24], "intersect": [16, 26], "feature_names_out_": [8, 16, 18], "abl": 16, "realli": 16, "selector": [16, 34], "parallel": [16, 20], "fit_param": 16, "version": [16, 20], "arrai": [16, 23, 24], "like": 16, "shape": [16, 24], "n_sampl": 16, "n_featur": 16, "sampl": [16, 24, 26, 27], "n_output": 16, "unsupervis": 16, "addit": 16, "x_new": 16, "ndarrai": [16, 23, 24], "n_features_new": 16, "To": 16, "optim": 16, "_summary_": [8, 18, 19, 20], "feature_names_in_": 18, "instanti": [18, 21, 29], "receiv": [18, 19, 20, 21], "select": [18, 19, 20, 21, 26, 27], "best": [18, 19, 20, 21], "ones": [18, 19, 20, 21], "warn": [18, 19, 20, 21, 26, 27], "all": [18, 19, 20, 21, 26], "directli": [18, 19, 20, 21, 29], "what": [18, 19, 20, 21, 26, 30], "wa": [18, 19, 20, 21], "found": [18, 19, 20, 21], "dure": [18, 19, 20, 21, 26], "present": [18, 19, 20, 21], "dist_threshold": 19, "0": [19, 20, 21], "metric": [19, 20, 26], "callabl": [19, 20], "dist_absolute_correl": [19, 20, 34], "baseselector": [19, 20, 21, 34], "cluster": 19, "distanc": [19, 24], "keep": 19, "per": 19, "threshold": [19, 20], "correl": [19, 20, 23, 24], "euclidian": [19, 20], "minkowski": [19, 20], "raw_model_nam": [20, 29, 30], "raw_model_param": [20, 29, 30], "forecast_horizon": 20, "time_col": 20, "freq": 20, "r2_score": 20, "significant_improv": 20, "005": 20, "n_trial": 20, "feed": 20, "forward": 20, "dart": 20, "seri": [20, 26, 27], "forecast": [20, 26, 27], "model": [20, 26, 27, 29, 30], "best_features_init": 20, "set_fit_request": [20, 34], "request": 20, "pass": 20, "note": 20, "onli": [20, 26, 27], "relev": 20, "enable_metadata_rout": 20, "sklearn": 20, "set_config": 20, "provid": 20, "ignor": 20, "fals": [20, 27], "meta": 20, "rais": [20, 30], "error": [20, 27, 32], "should": [20, 26, 27], "given": [20, 26, 27], "alia": 20, "instead": [20, 32], "origin": 20, "util": [20, 34], "metadata_rout": 20, "retain": 20, "exist": 20, "you": 20, "chang": 20, "some": 20, "other": 20, "3": 20, "sub": 20, "e": 20, "g": 20, "insid": 20, "otherwis": 20, "ha": [20, 24], "effect": 20, "low_threshold": 21, "001": 21, "remov": 21, "low": 21, "varianc": 21, "normal": 21, "befor": [21, 27], "can": [21, 30], "lead": 21, "unexpect": 21, "result": [21, 32], "high_threshold": 21, "u": [23, 24], "comput": [23, 24], "ab": [23, 24], "corr": [23, 24], "np": [23, 24], "vector": 23, "abs_corr": 23, "between": [24, 26], "across": 24, "sever": 24, "2d": 24, "n": 24, "d0": 24, "d1": 24, "dist_corr": 24, "forecast_run": 26, "forecastrun": [26, 34], "track": 26, "complet": [26, 27], "featur": [26, 27, 34], "preprocess": [26, 27, 30], "backtest": [26, 34], "forecasting_horizon": [26, 27], "n_fold": 26, "5": 26, "train_length": 26, "val_length": 26, "stride": 26, "val_strid": 26, "last_points_onli": 26, "reproduc": 26, "would": 26, "happen": 26, "we": 26, "had": 26, "subset": 26, "past": [26, 27], "predict": [26, 27, 34], "futur": [26, 27], "measur": [26, 27], "train": 26, "valid": 26, "_description_": [], "avail": 26, "number": 26, "tupl": [26, 27], "forc": 26, "overrid": 26, "behavior": 26, "when": [26, 27], "step": 26, "size": 26, "done": [26, 32], "two": 26, "consecut": 26, "highest": [], "horizon": [], "consid": [], "simul": 26, "evaluate_forecast": [26, 34], "true_seri": 26, "pred_seri": [26, 27], "target_nam": [26, 27], "qualiti": 26, "ground": 26, "truth": 26, "somewher": 26, "index": [26, 34], "datetim": 26, "score": 26, "evaluate_one_target_forecast": [26, 34], "one": [26, 27], "mae": 26, "mse": 26, "mape": 26, "r2": 26, "marr": 26, "plot_evaluate_forecast": [26, 34], "all_target_scor": 26, "file_sav": [26, 32], "plot": [26, 32], "bar": [26, 32], "chart": [26, 32], "path": [26, 32], "save": [26, 32], "show": [26, 32], "without": 26, "featurizerpipelin": [27, 34], "preprocessor": 27, "forecastingpreprocessor": 27, "regressionmodel": 27, "use_future_covari": 27, "extract": 27, "prepar": 27, "need": 27, "learnt": 27, "covari": 27, "fit_featur": [27, 34], "shortcut": 27, "kept": 27, "alreadi": 27, "known": 27, "fit_model": [27, 34], "val_data": 27, "fit_preprocessor": [27, 34], "call": 27, "beforehand": 27, "ahead": [26, 27], "good": [26, 27], "do": [26, 27], "latest": 27, "among": 27, "preprocess_time_series_for_model": [27, 34], "timeseri": 27, "adapt": 27, "process": [27, 30], "augment": 27, "ani": 29, "associ": [29, 30], "raw": 29, "which": 29, "were": [29, 30], "pars": [29, 30], "keyword": [29, 30], "retriev": [29, 30], "cla": [29, 30], "translat": 30, "yaml": 30, "file": 30, "expect": 30, "model_param": 30, "notimplementederror": 30, "unknown": 30, "results_label": 32, "x_name": 32, "yerror": 32, "titl": 32, "xlabel": 32, "ylabel": 32, "src": 34, "absfunct": 34, "deltafunct": 34, "dividefunct": 34, "exponentialfunct": 34, "mygeneratorwrapp": 34, "oppositefunct": 34, "powerfunct": 34, "productfunct": 34, "smoothexponentialweightedfunct": 34, "sumfunct": 34, "clusterfilt": 34, "feedforwarddartsforecastingselect": 34, "lowvariancethreshold": 34, "dist_absolute_correlation_on_sampl": 34, "forecastperformancetrack": 34, "model_instanti": 34, "instantiate_model": 34, "preprocess_model_param": 34, "plot_bar_chart": 34, "search": 34, "page": 34, "first": 32, "label": 32, "depth": 32, "thei": 32, "indic": 32, "legend": 32, "axi": 32, "whole": 32, "where": 32, "_period": 5, "locat": 26, "after": 26, "scores_set": 26, "made": 26, "element": 26, "series_sc": 27, "past_covariates_sc": 27, "future_covariates_sc": 27}, "objects": {"": [[1, 0, 0, "-", "src"]], "src": [[2, 0, 0, "-", "featurizer"], [25, 0, 0, "-", "main"], [28, 0, 0, "-", "model_instantiator"], [31, 0, 0, "-", "utils"]], "src.featurizer": [[3, 0, 0, "-", "generators"], [15, 0, 0, "-", "pipeline"], [17, 0, 0, "-", "selectors"], [22, 0, 0, "-", "utils"]], "src.featurizer.generators": [[4, 1, 1, "", "AbsFunction"], [5, 1, 1, "", "DeltaFunction"], [6, 1, 1, "", "DivideFunction"], [7, 1, 1, "", "ExponentialFunction"], [8, 1, 1, "", "MyGeneratorWrapper"], [9, 1, 1, "", "OppositeFunction"], [10, 1, 1, "", "PowerFunction"], [11, 1, 1, "", "ProductFunction"], [12, 1, 1, "", "SmoothExponentialWeightedFunction"], [13, 1, 1, "", "SumFunction"], [14, 1, 1, "", "TransformFunction"]], "src.featurizer.generators.AbsFunction": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "apply"], [4, 3, 1, "", "input_names"], [4, 3, 1, "", "input_types"], [4, 3, 1, "", "main_name"], [4, 3, 1, "", "name"], [4, 3, 1, "", "params_repr"]], "src.featurizer.generators.DeltaFunction": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "apply"], [5, 3, 1, "", "input_names"], [5, 3, 1, "", "input_types"], [5, 3, 1, "", "main_name"], [5, 3, 1, "", "name"], [5, 3, 1, "", "params_repr"]], "src.featurizer.generators.DivideFunction": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "apply"], [6, 3, 1, "", "input_names"], [6, 3, 1, "", "input_types"], [6, 3, 1, "", "main_name"], [6, 3, 1, "", "name"], [6, 3, 1, "", "params_repr"]], "src.featurizer.generators.ExponentialFunction": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "apply"], [7, 3, 1, "", "input_names"], [7, 3, 1, "", "input_types"], [7, 3, 1, "", "main_name"], [7, 3, 1, "", "name"], [7, 3, 1, "", "params_repr"]], "src.featurizer.generators.MyGeneratorWrapper": [[8, 2, 1, "", "__init__"], [8, 2, 1, "", "fit"], [8, 2, 1, "", "fit_transform"], [8, 2, 1, "", "get_feature_names_out"], [8, 2, 1, "", "get_metadata_routing"], [8, 2, 1, "", "get_params"], [8, 2, 1, "", "set_output"], [8, 2, 1, "", "set_params"], [8, 2, 1, "", "transform"]], "src.featurizer.generators.OppositeFunction": [[9, 2, 1, "", "__init__"], [9, 2, 1, "", "apply"], [9, 3, 1, "", "input_names"], [9, 3, 1, "", "input_types"], [9, 3, 1, "", "main_name"], [9, 3, 1, "", "name"], [9, 3, 1, "", "params_repr"]], "src.featurizer.generators.PowerFunction": [[10, 2, 1, "", "__init__"], [10, 2, 1, "", "apply"], [10, 3, 1, "", "input_names"], [10, 3, 1, "", "input_types"], [10, 3, 1, "", "main_name"], [10, 3, 1, "", "name"], [10, 3, 1, "", "params_repr"]], "src.featurizer.generators.ProductFunction": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "apply"], [11, 3, 1, "", "input_names"], [11, 3, 1, "", "input_types"], [11, 3, 1, "", "main_name"], [11, 3, 1, "", "name"], [11, 3, 1, "", "params_repr"]], "src.featurizer.generators.SmoothExponentialWeightedFunction": [[12, 2, 1, "", "__init__"], [12, 2, 1, "", "apply"], [12, 3, 1, "", "input_names"], [12, 3, 1, "", "input_types"], [12, 3, 1, "", "main_name"], [12, 3, 1, "", "name"], [12, 3, 1, "", "params_repr"]], "src.featurizer.generators.SumFunction": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "apply"], [13, 3, 1, "", "input_names"], [13, 3, 1, "", "input_types"], [13, 3, 1, "", "main_name"], [13, 3, 1, "", "name"], [13, 3, 1, "", "params_repr"]], "src.featurizer.generators.TransformFunction": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "apply"], [14, 3, 1, "", "input_names"], [14, 3, 1, "", "input_types"], [14, 3, 1, "", "main_name"], [14, 3, 1, "", "name"], [14, 3, 1, "", "params_repr"]], "src.featurizer.pipeline": [[16, 1, 1, "", "FeaturizerPipeline"]], "src.featurizer.pipeline.FeaturizerPipeline": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "fit_transform"], [16, 2, 1, "", "get_metadata_routing"], [16, 2, 1, "", "get_params"], [16, 2, 1, "", "set_output"], [16, 2, 1, "", "set_params"], [16, 2, 1, "", "transform"]], "src.featurizer.selectors": [[18, 1, 1, "", "BaseSelector"], [19, 1, 1, "", "ClusterFilter"], [20, 1, 1, "", "FeedForwardDartsForecastingSelection"], [21, 1, 1, "", "LowVarianceThreshold"]], "src.featurizer.selectors.BaseSelector": [[18, 2, 1, "", "__init__"], [18, 2, 1, "", "fit"], [18, 2, 1, "", "fit_transform"], [18, 2, 1, "", "get_metadata_routing"], [18, 2, 1, "", "get_params"], [18, 2, 1, "", "set_output"], [18, 2, 1, "", "set_params"], [18, 2, 1, "", "transform"]], "src.featurizer.selectors.ClusterFilter": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "fit"], [19, 2, 1, "", "fit_transform"], [19, 2, 1, "", "get_metadata_routing"], [19, 2, 1, "", "get_params"], [19, 2, 1, "", "set_output"], [19, 2, 1, "", "set_params"], [19, 2, 1, "", "transform"]], "src.featurizer.selectors.FeedForwardDartsForecastingSelection": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "fit"], [20, 2, 1, "", "fit_transform"], [20, 2, 1, "", "get_metadata_routing"], [20, 2, 1, "", "get_params"], [20, 2, 1, "", "set_fit_request"], [20, 2, 1, "", "set_output"], [20, 2, 1, "", "set_params"], [20, 2, 1, "", "transform"]], "src.featurizer.selectors.LowVarianceThreshold": [[21, 2, 1, "", "__init__"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "fit_transform"], [21, 2, 1, "", "get_metadata_routing"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "set_output"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "transform"]], "src.featurizer.utils": [[23, 4, 1, "", "dist_absolute_correlation"], [24, 4, 1, "", "dist_absolute_correlation_on_samples"]], "src.main": [[26, 1, 1, "", "ForecastPerformanceTracker"], [27, 1, 1, "", "ForecastRun"]], "src.main.ForecastPerformanceTracker": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "backtest"], [26, 2, 1, "", "evaluate_forecasts"], [26, 2, 1, "", "evaluate_one_target_forecast"], [26, 2, 1, "", "plot_evaluate_forecasts"]], "src.main.ForecastRun": [[27, 2, 1, "", "__init__"], [27, 2, 1, "", "fit_featurizer"], [27, 2, 1, "", "fit_model"], [27, 2, 1, "", "fit_preprocessor"], [27, 2, 1, "", "predict"], [27, 2, 1, "", "preprocess_time_series_for_model"]], "src.model_instantiator": [[29, 4, 1, "", "instantiate_model"], [30, 4, 1, "", "preprocess_model_params"]], "src.utils": [[32, 4, 1, "", "plot_bar_chart"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "featur": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "gener": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 34], "absfunct": 4, "deltafunct": 5, "dividefunct": 6, "exponentialfunct": 7, "mygeneratorwrapp": 8, "oppositefunct": 9, "powerfunct": 10, "productfunct": 11, "smoothexponentialweightedfunct": 12, "sumfunct": 13, "transformfunct": 14, "pipelin": [15, 16], "featurizerpipelin": 16, "selector": [17, 18, 19, 20, 21], "baseselector": 18, "clusterfilt": 19, "feedforwarddartsforecastingselect": 20, "lowvariancethreshold": 21, "util": [22, 23, 24, 31, 32], "dist_absolute_correl": 23, "dist_absolute_correlation_on_sampl": 24, "main": [25, 26, 27], "forecastperformancetrack": 26, "forecastrun": 27, "model_instanti": [28, 29, 30], "instantiate_model": 29, "preprocess_model_param": 30, "plot_bar_chart": 32, "api": 33, "welcom": 34, "time": 34, "seri": 34, "forecast": 34, "": 34, "document": 34, "content": 34, "indic": 34, "tabl": 34}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"src": [[1, "module-src"]], "src.featurizer": [[2, "module-src.featurizer"]], "src.featurizer.pipeline": [[15, "module-src.featurizer.pipeline"]], "src.featurizer.selectors": [[17, "module-src.featurizer.selectors"]], "src.featurizer.utils": [[22, "module-src.featurizer.utils"]], "src.featurizer.utils.dist_absolute_correlation": [[23, "src-featurizer-utils-dist-absolute-correlation"]], "src.featurizer.utils.dist_absolute_correlation_on_samples": [[24, "src-featurizer-utils-dist-absolute-correlation-on-samples"]], "API": [[33, "api"]], "Welcome to Time Series Forecasting Generic\u2019s documentation!": [[34, "welcome-to-time-series-forecasting-generic-s-documentation"]], "Contents": [[34, "contents"]], "Indices and tables": [[34, "indices-and-tables"]], "src.model_instantiator": [[28, "module-src.model_instantiator"]], "src.model_instantiator.instantiate_model": [[29, "src-model-instantiator-instantiate-model"]], "src.model_instantiator.preprocess_model_params": [[30, "src-model-instantiator-preprocess-model-params"]], "src.utils": [[31, "module-src.utils"]], "src.utils.plot_bar_chart": [[32, "src-utils-plot-bar-chart"]], "src.featurizer.generators": [[3, "module-src.featurizer.generators"]], "src.main": [[25, "module-src.main"]], "src.featurizer.generators.AbsFunction": [[4, "src-featurizer-generators-absfunction"]], "src.featurizer.generators.DeltaFunction": [[5, "src-featurizer-generators-deltafunction"]], "src.featurizer.generators.DivideFunction": [[6, "src-featurizer-generators-dividefunction"]], "src.featurizer.generators.ExponentialFunction": [[7, "src-featurizer-generators-exponentialfunction"]], "src.featurizer.generators.MyGeneratorWrapper": [[8, "src-featurizer-generators-mygeneratorwrapper"]], "src.featurizer.generators.OppositeFunction": [[9, "src-featurizer-generators-oppositefunction"]], "src.featurizer.generators.PowerFunction": [[10, "src-featurizer-generators-powerfunction"]], "src.featurizer.generators.ProductFunction": [[11, "src-featurizer-generators-productfunction"]], "src.featurizer.generators.SmoothExponentialWeightedFunction": [[12, "src-featurizer-generators-smoothexponentialweightedfunction"]], "src.featurizer.generators.SumFunction": [[13, "src-featurizer-generators-sumfunction"]], "src.featurizer.generators.TransformFunction": [[14, "src-featurizer-generators-transformfunction"]], "src.featurizer.pipeline.FeaturizerPipeline": [[16, "src-featurizer-pipeline-featurizerpipeline"]], "src.featurizer.selectors.BaseSelector": [[18, "src-featurizer-selectors-baseselector"]], "src.featurizer.selectors.ClusterFilter": [[19, "src-featurizer-selectors-clusterfilter"]], "src.featurizer.selectors.FeedForwardDartsForecastingSelection": [[20, "src-featurizer-selectors-feedforwarddartsforecastingselection"]], "src.featurizer.selectors.LowVarianceThreshold": [[21, "src-featurizer-selectors-lowvariancethreshold"]], "src.main.ForecastPerformanceTracker": [[26, "src-main-forecastperformancetracker"]], "src.main.ForecastRun": [[27, "src-main-forecastrun"]]}, "indexentries": {"module": [[3, "module-src.featurizer.generators"], [15, "module-src.featurizer.pipeline"], [17, "module-src.featurizer.selectors"], [25, "module-src.main"]], "src.featurizer.generators": [[3, "module-src.featurizer.generators"]], "absfunction (class in src.featurizer.generators)": [[4, "src.featurizer.generators.AbsFunction"]], "__init__() (src.featurizer.generators.absfunction method)": [[4, "src.featurizer.generators.AbsFunction.__init__"]], "apply() (src.featurizer.generators.absfunction method)": [[4, "src.featurizer.generators.AbsFunction.apply"]], "input_names (src.featurizer.generators.absfunction property)": [[4, "src.featurizer.generators.AbsFunction.input_names"]], "input_types (src.featurizer.generators.absfunction property)": [[4, "src.featurizer.generators.AbsFunction.input_types"]], "main_name (src.featurizer.generators.absfunction property)": [[4, "src.featurizer.generators.AbsFunction.main_name"]], "name (src.featurizer.generators.absfunction property)": [[4, "src.featurizer.generators.AbsFunction.name"]], "params_repr (src.featurizer.generators.absfunction property)": [[4, "src.featurizer.generators.AbsFunction.params_repr"]], "deltafunction (class in src.featurizer.generators)": [[5, "src.featurizer.generators.DeltaFunction"]], "__init__() (src.featurizer.generators.deltafunction method)": [[5, "src.featurizer.generators.DeltaFunction.__init__"]], "apply() (src.featurizer.generators.deltafunction method)": [[5, "src.featurizer.generators.DeltaFunction.apply"]], "input_names (src.featurizer.generators.deltafunction property)": [[5, "src.featurizer.generators.DeltaFunction.input_names"]], "input_types (src.featurizer.generators.deltafunction property)": [[5, "src.featurizer.generators.DeltaFunction.input_types"]], "main_name (src.featurizer.generators.deltafunction property)": [[5, "src.featurizer.generators.DeltaFunction.main_name"]], "name (src.featurizer.generators.deltafunction property)": [[5, "src.featurizer.generators.DeltaFunction.name"]], "params_repr (src.featurizer.generators.deltafunction property)": [[5, "src.featurizer.generators.DeltaFunction.params_repr"]], "dividefunction (class in src.featurizer.generators)": [[6, "src.featurizer.generators.DivideFunction"]], "__init__() (src.featurizer.generators.dividefunction method)": [[6, "src.featurizer.generators.DivideFunction.__init__"]], "apply() (src.featurizer.generators.dividefunction method)": [[6, "src.featurizer.generators.DivideFunction.apply"]], "input_names (src.featurizer.generators.dividefunction property)": [[6, "src.featurizer.generators.DivideFunction.input_names"]], "input_types (src.featurizer.generators.dividefunction property)": [[6, "src.featurizer.generators.DivideFunction.input_types"]], "main_name (src.featurizer.generators.dividefunction property)": [[6, "src.featurizer.generators.DivideFunction.main_name"]], "name (src.featurizer.generators.dividefunction property)": [[6, "src.featurizer.generators.DivideFunction.name"]], "params_repr (src.featurizer.generators.dividefunction property)": [[6, "src.featurizer.generators.DivideFunction.params_repr"]], "exponentialfunction (class in src.featurizer.generators)": [[7, "src.featurizer.generators.ExponentialFunction"]], "__init__() (src.featurizer.generators.exponentialfunction method)": [[7, "src.featurizer.generators.ExponentialFunction.__init__"]], "apply() (src.featurizer.generators.exponentialfunction method)": [[7, "src.featurizer.generators.ExponentialFunction.apply"]], "input_names (src.featurizer.generators.exponentialfunction property)": [[7, "src.featurizer.generators.ExponentialFunction.input_names"]], "input_types (src.featurizer.generators.exponentialfunction property)": [[7, "src.featurizer.generators.ExponentialFunction.input_types"]], "main_name (src.featurizer.generators.exponentialfunction property)": [[7, "src.featurizer.generators.ExponentialFunction.main_name"]], "name (src.featurizer.generators.exponentialfunction property)": [[7, "src.featurizer.generators.ExponentialFunction.name"]], "params_repr (src.featurizer.generators.exponentialfunction property)": [[7, "src.featurizer.generators.ExponentialFunction.params_repr"]], "mygeneratorwrapper (class in src.featurizer.generators)": [[8, "src.featurizer.generators.MyGeneratorWrapper"]], "__init__() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.__init__"]], "fit() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.fit"]], "fit_transform() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.fit_transform"]], "get_feature_names_out() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.get_feature_names_out"]], "get_metadata_routing() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.get_metadata_routing"]], "get_params() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.get_params"]], "set_output() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.set_output"]], "set_params() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.set_params"]], "transform() (src.featurizer.generators.mygeneratorwrapper method)": [[8, "src.featurizer.generators.MyGeneratorWrapper.transform"]], "oppositefunction (class in src.featurizer.generators)": [[9, "src.featurizer.generators.OppositeFunction"]], "__init__() (src.featurizer.generators.oppositefunction method)": [[9, "src.featurizer.generators.OppositeFunction.__init__"]], "apply() (src.featurizer.generators.oppositefunction method)": [[9, "src.featurizer.generators.OppositeFunction.apply"]], "input_names (src.featurizer.generators.oppositefunction property)": [[9, "src.featurizer.generators.OppositeFunction.input_names"]], "input_types (src.featurizer.generators.oppositefunction property)": [[9, "src.featurizer.generators.OppositeFunction.input_types"]], "main_name (src.featurizer.generators.oppositefunction property)": [[9, "src.featurizer.generators.OppositeFunction.main_name"]], "name (src.featurizer.generators.oppositefunction property)": [[9, "src.featurizer.generators.OppositeFunction.name"]], "params_repr (src.featurizer.generators.oppositefunction property)": [[9, "src.featurizer.generators.OppositeFunction.params_repr"]], "powerfunction (class in src.featurizer.generators)": [[10, "src.featurizer.generators.PowerFunction"]], "__init__() (src.featurizer.generators.powerfunction method)": [[10, "src.featurizer.generators.PowerFunction.__init__"]], "apply() (src.featurizer.generators.powerfunction method)": [[10, "src.featurizer.generators.PowerFunction.apply"]], "input_names (src.featurizer.generators.powerfunction property)": [[10, "src.featurizer.generators.PowerFunction.input_names"]], "input_types (src.featurizer.generators.powerfunction property)": [[10, "src.featurizer.generators.PowerFunction.input_types"]], "main_name (src.featurizer.generators.powerfunction property)": [[10, "src.featurizer.generators.PowerFunction.main_name"]], "name (src.featurizer.generators.powerfunction property)": [[10, "src.featurizer.generators.PowerFunction.name"]], "params_repr (src.featurizer.generators.powerfunction property)": [[10, "src.featurizer.generators.PowerFunction.params_repr"]], "productfunction (class in src.featurizer.generators)": [[11, "src.featurizer.generators.ProductFunction"]], "__init__() (src.featurizer.generators.productfunction method)": [[11, "src.featurizer.generators.ProductFunction.__init__"]], "apply() (src.featurizer.generators.productfunction method)": [[11, "src.featurizer.generators.ProductFunction.apply"]], "input_names (src.featurizer.generators.productfunction property)": [[11, "src.featurizer.generators.ProductFunction.input_names"]], "input_types (src.featurizer.generators.productfunction property)": [[11, "src.featurizer.generators.ProductFunction.input_types"]], "main_name (src.featurizer.generators.productfunction property)": [[11, "src.featurizer.generators.ProductFunction.main_name"]], "name (src.featurizer.generators.productfunction property)": [[11, "src.featurizer.generators.ProductFunction.name"]], "params_repr (src.featurizer.generators.productfunction property)": [[11, "src.featurizer.generators.ProductFunction.params_repr"]], "smoothexponentialweightedfunction (class in src.featurizer.generators)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction"]], "__init__() (src.featurizer.generators.smoothexponentialweightedfunction method)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.__init__"]], "apply() (src.featurizer.generators.smoothexponentialweightedfunction method)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.apply"]], "input_names (src.featurizer.generators.smoothexponentialweightedfunction property)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.input_names"]], "input_types (src.featurizer.generators.smoothexponentialweightedfunction property)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.input_types"]], "main_name (src.featurizer.generators.smoothexponentialweightedfunction property)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.main_name"]], "name (src.featurizer.generators.smoothexponentialweightedfunction property)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.name"]], "params_repr (src.featurizer.generators.smoothexponentialweightedfunction property)": [[12, "src.featurizer.generators.SmoothExponentialWeightedFunction.params_repr"]], "sumfunction (class in src.featurizer.generators)": [[13, "src.featurizer.generators.SumFunction"]], "__init__() (src.featurizer.generators.sumfunction method)": [[13, "src.featurizer.generators.SumFunction.__init__"]], "apply() (src.featurizer.generators.sumfunction method)": [[13, "src.featurizer.generators.SumFunction.apply"]], "input_names (src.featurizer.generators.sumfunction property)": [[13, "src.featurizer.generators.SumFunction.input_names"]], "input_types (src.featurizer.generators.sumfunction property)": [[13, "src.featurizer.generators.SumFunction.input_types"]], "main_name (src.featurizer.generators.sumfunction property)": [[13, "src.featurizer.generators.SumFunction.main_name"]], "name (src.featurizer.generators.sumfunction property)": [[13, "src.featurizer.generators.SumFunction.name"]], "params_repr (src.featurizer.generators.sumfunction property)": [[13, "src.featurizer.generators.SumFunction.params_repr"]], "transformfunction (class in src.featurizer.generators)": [[14, "src.featurizer.generators.TransformFunction"]], "__init__() (src.featurizer.generators.transformfunction method)": [[14, "src.featurizer.generators.TransformFunction.__init__"]], "apply() (src.featurizer.generators.transformfunction method)": [[14, "src.featurizer.generators.TransformFunction.apply"]], "input_names (src.featurizer.generators.transformfunction property)": [[14, "src.featurizer.generators.TransformFunction.input_names"]], "input_types (src.featurizer.generators.transformfunction property)": [[14, "src.featurizer.generators.TransformFunction.input_types"]], "main_name (src.featurizer.generators.transformfunction property)": [[14, "src.featurizer.generators.TransformFunction.main_name"]], "name (src.featurizer.generators.transformfunction property)": [[14, "src.featurizer.generators.TransformFunction.name"]], "params_repr (src.featurizer.generators.transformfunction property)": [[14, "src.featurizer.generators.TransformFunction.params_repr"]], "src.featurizer.pipeline": [[15, "module-src.featurizer.pipeline"]], "featurizerpipeline (class in src.featurizer.pipeline)": [[16, "src.featurizer.pipeline.FeaturizerPipeline"]], "__init__() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.__init__"]], "fit_transform() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.fit_transform"]], "get_metadata_routing() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.get_metadata_routing"]], "get_params() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.get_params"]], "set_output() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.set_output"]], "set_params() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.set_params"]], "transform() (src.featurizer.pipeline.featurizerpipeline method)": [[16, "src.featurizer.pipeline.FeaturizerPipeline.transform"]], "src.featurizer.selectors": [[17, "module-src.featurizer.selectors"]], "baseselector (class in src.featurizer.selectors)": [[18, "src.featurizer.selectors.BaseSelector"]], "__init__() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.__init__"]], "fit() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.fit"]], "fit_transform() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.fit_transform"]], "get_metadata_routing() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.get_metadata_routing"]], "get_params() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.get_params"]], "set_output() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.set_output"]], "set_params() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.set_params"]], "transform() (src.featurizer.selectors.baseselector method)": [[18, "src.featurizer.selectors.BaseSelector.transform"]], "clusterfilter (class in src.featurizer.selectors)": [[19, "src.featurizer.selectors.ClusterFilter"]], "__init__() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.__init__"]], "fit() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.fit"]], "fit_transform() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.fit_transform"]], "get_metadata_routing() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.get_metadata_routing"]], "get_params() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.get_params"]], "set_output() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.set_output"]], "set_params() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.set_params"]], "transform() (src.featurizer.selectors.clusterfilter method)": [[19, "src.featurizer.selectors.ClusterFilter.transform"]], "feedforwarddartsforecastingselection (class in src.featurizer.selectors)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection"]], "__init__() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.__init__"]], "fit() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.fit"]], "fit_transform() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.fit_transform"]], "get_metadata_routing() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.get_metadata_routing"]], "get_params() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.get_params"]], "set_fit_request() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.set_fit_request"]], "set_output() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.set_output"]], "set_params() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.set_params"]], "transform() (src.featurizer.selectors.feedforwarddartsforecastingselection method)": [[20, "src.featurizer.selectors.FeedForwardDartsForecastingSelection.transform"]], "lowvariancethreshold (class in src.featurizer.selectors)": [[21, "src.featurizer.selectors.LowVarianceThreshold"]], "__init__() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.__init__"]], "fit() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.fit"]], "fit_transform() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.fit_transform"]], "get_metadata_routing() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.get_metadata_routing"]], "get_params() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.get_params"]], "set_output() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.set_output"]], "set_params() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.set_params"]], "transform() (src.featurizer.selectors.lowvariancethreshold method)": [[21, "src.featurizer.selectors.LowVarianceThreshold.transform"]], "src.main": [[25, "module-src.main"]], "forecastperformancetracker (class in src.main)": [[26, "src.main.ForecastPerformanceTracker"]], "__init__() (src.main.forecastperformancetracker method)": [[26, "src.main.ForecastPerformanceTracker.__init__"]], "backtest() (src.main.forecastperformancetracker method)": [[26, "src.main.ForecastPerformanceTracker.backtest"]], "evaluate_forecasts() (src.main.forecastperformancetracker method)": [[26, "src.main.ForecastPerformanceTracker.evaluate_forecasts"]], "evaluate_one_target_forecast() (src.main.forecastperformancetracker method)": [[26, "src.main.ForecastPerformanceTracker.evaluate_one_target_forecast"]], "plot_evaluate_forecasts() (src.main.forecastperformancetracker method)": [[26, "src.main.ForecastPerformanceTracker.plot_evaluate_forecasts"]], "forecastrun (class in src.main)": [[27, "src.main.ForecastRun"]], "__init__() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.__init__"]], "fit_featurizer() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.fit_featurizer"]], "fit_model() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.fit_model"]], "fit_preprocessor() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.fit_preprocessor"]], "predict() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.predict"]], "preprocess_time_series_for_model() (src.main.forecastrun method)": [[27, "src.main.ForecastRun.preprocess_time_series_for_model"]]}})